$breakpoints: (
  // mobiles
  "mb":
    (
      "min": 0px,
      "max": 600px,
    ),
  // tabs and large mobiles
  "tb":
    (
      "min": 601px,
      "max": 1024px,
    ),
  // normal laptop screens
  "sm":
    (
      "min": 1025px,
      "max": 1280px,
    ),
  // large screens laptop and desktop screens
  "lg":
    (
      "min": 1281px,
      "max": 1600px,
    ),
  // very large screens
  "xl":
    (
      "min": 1601px,
      "max": 999999999px,
    )
) !default;

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $min-width: map-get(map-get($breakpoints, $breakpoint), "min");
    $max-width: map-get(map-get($breakpoints, $breakpoint), "max");
    @media (min-width: #{$min-width}) and (max-width: #{$max-width}) {
      @content;
    }
  }
}

.wrapper {
  display: flex;
  flex-wrap: wrap;
  padding: var(--spacing-8);
  gap: var(--spacing-8);

  .container {
    width: 12rem;
    mat-card {
      color: var(--card-title-color);
      &.hidden * {
        color: gray !important;
      }
    }
    & .menu-btn {
      position: absolute;
      top: 5px;
      right: 5px;
      padding: 0px;
      margin: 0px;
    }
  }

  .add-placeholder {
    border: 1px gray dashed;
    width: 100%;
    height: 100%;
    border-radius: 10px;
    min-height: var(--spacing-36);
    margin-top: var(--spacing-1-5);
    margin-bottom: var(--spacing-1-5);
    mat-icon {
      margin: 0;
      width: var(--spacing-16);
      height: var(--spacing-16);
      font-size: var(--spacing-16, 4rem);
    }
  }

  @include respond-to("mb") {
    gap: var(--spacing-4);
    padding: var(--spacing-4);
    .container {
      width: 10rem;
    }
  }
  @include respond-to("tb") {
    gap: var(--spacing-4);
    padding: var(--spacing-4);
    .container {
      width: 10rem;
    }
  }
  @include respond-to("sm") {
    gap: var(--spacing-4);
  }
  @include respond-to("lg") {
  }
  @include respond-to("xl") {
  }
}

mat-icon {
  color: var(--chart-icon-color);
  &.chart-icon {
    height: var(--spacing-32);
    font-size: var(--spacing-32, 8rem);
    display: flex;
    justify-content: center;
    align-items: center;
  }
}
